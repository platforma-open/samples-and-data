tpl := import("@platforma-sdk/workflow-tengo:tpl")
exec := import("@platforma-sdk/workflow-tengo:exec")
assets := import("@platforma-sdk/workflow-tengo:assets")
smart := import("@platforma-sdk/workflow-tengo:smart")
text := import("text")
slices := import("@platforma-sdk/workflow-tengo:slices")
ll := import("@platforma-sdk/workflow-tengo:ll")

tpl.defineOutputs("samplesContent", "columnsContent")

tpl.body(func(inputs) {
    h5adFile := inputs.h5adFile
    sampleColumnName := inputs.sampleColumnName
    
    if !sampleColumnName {
        sampleColumnName = "sample"
    }

    parseH5ad := exec.builder().
        software(assets.importSoftware("@platforma-open/milaboratories.samples-and-data.parse-h5ad:main")).
        addFile("input.h5ad", h5adFile).
        arg("--input").arg("input.h5ad").
        arg("--sample-output").arg("samples.csv").
        arg("--column-output").arg("columns.csv").
        arg("--column").arg(sampleColumnName).
        saveFileContent("samples.csv").
        saveFileContent("columns.csv").
        printErrStreamToStdout().
        run()
    
    return {
        samplesContent: parseH5ad.getFileContent("samples.csv"),
        columnsContent: parseH5ad.getFileContent("columns.csv")
    }
})

