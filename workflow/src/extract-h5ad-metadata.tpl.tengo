tpl := import("@platforma-sdk/workflow-tengo:tpl")
exec := import("@platforma-sdk/workflow-tengo:exec")
assets := import("@platforma-sdk/workflow-tengo:assets")
smart := import("@platforma-sdk/workflow-tengo:smart")
text := import("text")
slices := import("@platforma-sdk/workflow-tengo:slices")
ll := import("@platforma-sdk/workflow-tengo:ll")

tpl.defineOutputs("metadataContent")

tpl.body(func(inputs) {
    h5adFile := inputs.h5adFile
    sampleColumnName := inputs.sampleColumnName
    columnNames := inputs.columnNames
    
    if !sampleColumnName {
        sampleColumnName = "sample"
    }

    if !columnNames || len(columnNames) == 0 {
        ll.print("DBG: No columns to extract, returning empty content")
        return {
            metadataContent: undefined
        }
    }

    ll.print("DBG: Extracting columns: %v with sample column: %v", string(columnNames), sampleColumnName)
    
    builder := exec.builder().
        software(assets.importSoftware("@platforma-open/milaboratories.samples-and-data.parse-h5ad:main")).
        arg("extract-columns").
        addFile("input.h5ad", h5adFile).
        arg("--input").arg("input.h5ad").
        arg("--output").arg("metadata.csv").
        arg("--column").arg(sampleColumnName)
    
    // Add all column names
    builder = builder.arg("--column-names")
    for colName in columnNames {
        builder = builder.arg(colName)
    }
    
    extractMetadata := builder.
        saveFileContent("metadata.csv").
        printErrStreamToStdout().
        run()
    
    return {
        metadataContent: extractMetadata.getFileContent("metadata.csv")
    }
})

