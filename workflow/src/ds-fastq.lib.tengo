
ll := import("@platforma-sdk/workflow-tengo:ll")
pColumn := import("@platforma-sdk/workflow-tengo:pframes.pcolumn")
json := import("json")
util := import(":util")

export {
    isGrouped: false,
    
    createDataset: func(blockId, sampleIdAxis, dataset, importFile) {
        extension :=  dataset.content.gzipped ? "fastq.gz" : "fastq"
        
        spec := util.datasetColumnSpecBase(blockId, dataset, extension)

        readIndexAxisSpec := {
			type: "String",
			name: "pl7.app/sequencing/readIndex",
			annotations: {
				"pl7.app/label": "Read Index"
			},
			domain: {
				// Actually this is a special case of a more generic notion of
				// a "dense" axis with specified key value list.
				// When this concept will be fully defined, the domain most
				// probably should be renamed to "pl7.app/dense"
				"pl7.app/readIndices": string(json.encode(dataset.content.readIndices))
			}
		}

        spec.axesSpec = [sampleIdAxis, readIndexAxisSpec]

        data := pColumn.resourceMapBuilder(2)
        for sampleId, fileGroup in dataset.content.data {
            for _, readIndex in dataset.content.readIndices {
                importHandle := fileGroup[readIndex]
                if !importHandle {
                    ll.panic("File handle not set for %v in sample %v", readIndex, sampleId)
                }
                data.add([sampleId, readIndex], importFile(importHandle))
            }
        }

        result := {}
        result["dataset." + dataset.id] = {
            spec: spec,
            data: data.build()
        }

        return result
    }
}