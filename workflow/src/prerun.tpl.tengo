wf := import("@platforma-sdk/workflow-tengo:workflow")
file := import("@platforma-sdk/workflow-tengo:file")
maps := import("@platforma-sdk/workflow-tengo:maps")
smart := import("@platforma-sdk/workflow-tengo:smart")

dsBulkCountMatrix := import(":ds-bulk-count-matrix")

parsers := {
    BulkCountMatrix: dsBulkCountMatrix
}

wf.body(func(args) {
    fileImports := {}
    // Import file function; avoid re-importing the same file
	importFile := func(importHandle) {
		fromMap := fileImports[importHandle]
		if fromMap == undefined {
			fImport := file.importFile(importHandle)
			fileImports[importHandle] = fImport
			return fImport.file
		} else {
			return fromMap.file
		}
	}

    sampleGroups := {}
    for _, dataset in args.datasets {
        parser := parsers[dataset.content.type]
        if !is_undefined(parser) {
            sampleGroups[dataset.id] = parser.getSamples(dataset, importFile)
        }
    }
	return {
		outputs: {
            fileImports: maps.mapValues(fileImports, func(im) {
				return im.handle
			}),
            sampleGroups: sampleGroups
        },
		exports: {}
	}
})